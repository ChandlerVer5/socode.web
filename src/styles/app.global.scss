@import 'sanitize';
@import 'variable';
@import 'animate';
@import 'googlefonts';

// https://bulma.io/documentation/customize/with-node-sass/#6-add-your-own-bulma-styles
$purple: $primary; // #8A4D76;

// Update Bulma's global variables
$family-sans-serif: $font-sans;
$grey-dark: $dh-mute; // #757763;
$grey-light: $bulma-grey-light;
$link: $primary;
$widescreen-enabled: true;
$fullhd-enabled: true;

// Update some of Bulma's component variables
// $body-background-color: #EFF0EB;
// $control-border-width: 2px;
// $input-border-color: transparent;
// $input-shadow: none;

// Import only what you need from Bulma
@import '~bulma/sass/utilities/_all.sass';
@import '~bulma/sass/base/_all.sass';
@import '~bulma/sass/elements/button.sass';
@import '~bulma/sass/elements/container.sass';
@import '~bulma/sass/elements/title.sass';
@import '~bulma/sass/elements/other.sass';
@import '~bulma/sass/form/_all.sass';
@import '~bulma/sass/components/navbar.sass';
@import '~bulma/sass/components/dropdown.sass';
@import '~bulma/sass/components/menu.sass';
@import '~bulma/sass/layout/hero.sass';
@import '~bulma/sass/layout/section.sass';
// @import '~bulma/sass/layout/footer.sass';
// ------------------------------------------------------------------------------------

$hamburger-layer-color: rgba($dh-mute, 0.5);
$hamburger-active-layer-color: $primary;
$hamburger-layer-width: 34px;
$hamburger-layer-height: 6px;
$hamburger-layer-border-radius: 3px;
// $hamburger-layer-spacing: 8px;
@import '~hamburgers/_sass/hamburgers/hamburgers';

$positions: static, relative, absolute, fixed, sticky !default;
@each $position in $positions {
  .pos-#{$position} {
    position: $position !important;
  }
}

$preset-displays: none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex !default;
@each $value in $preset-displays {
  .dis-#{$value} {
    display: $value !important;
  }
}

$preset-sizes: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
  auto: auto,
);
@each $prop, $abbrev in (width: w, height: h) {
  @each $size, $length in $preset-sizes {
    .#{$abbrev}#{$size} {
      #{$prop}: $length !important;
    }
  }
}

$spaces: (
  5: 5px,
  10: 10px,
  20: 20px,
  40: 40px,
  5v: 5vw,
  10v: 10vw,
  20v: 20vw,
  40v: 40vw,
  1r: 1rem,
  2r: 2rem,
  3r: 3rem,
  4r: 4rem,
  5r: 5rem,
);
$space-props: (
  margin: mg,
  margin-top: mgt,
  margin-bottom: mgb,
  margin-left: mgl,
  margin-right: mgr,
  padding: pd,
  padding-top: pdt,
  padding-bottom: pdb,
  padding-left: pdl,
  padding-right: pdr,
);
@each $prop, $abbrev in $space-props {
  @each $space, $value in $spaces {
    .#{$abbrev}#{$space} {
      #{$prop}: $value !important;
    }
  }
}

.hide {
  visibility: hidden;
}
.hide-im {
  visibility: hidden !important;
}
.pnt {
  cursor: pointer;
}
.stretched-link {
  @include stretched-link();
}

html,
body {
  background: $dh-body;
  font-family: $font-sans;
  font-size: $fontsize;
  line-height: 1.6;
  color: $dh-text;
  overflow-y: auto;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Roboto Slab';
}

pre,
code {
  font-family: $font-mono;
  letter-spacing: -0.03em;
}

// @media (prefers-color-scheme: dark) {
//   html,body {
//     background: #0e0c0a;
//   }
// }

a.link {
  border-bottom: solid 1px transparent;
  transition: color 0.4s ease-in-out, border 0.4s ease-in-out;

  &:hover {
    color: $primary;
    border-bottom: solid 1px $primary;
  }
}

html.WithJs {
  & .pages-list,
  & .post-content {
    opacity: 0.4;
  }
  &.LoadDone {
    & .pages-list,
    & .post-content {
      opacity: 1;
      transition: opacity 100ms linear 100ms;
    }
  }
}

.app {
  height: 100vh;
  & > .container {
    height: 100vh;
  }
}

.footer {
  position: absolute;
  bottom: 0;
  right: 0;
}
